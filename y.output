State 79 conflicts: 1 shift/reduce
State 96 conflicts: 3 shift/reduce
State 99 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: AlgebricScript $end

    1 @1: /* empty */

    2 AlgebricScript: Declarations Function_Declarations @1 Instructions

    3 Declarations: Declarations Declaration ';'
    4             | /* empty */

    5 Function_Declarations: Function_Declarations Function_Declaration
    6                      | /* empty */

    7 Declaration: TYPE_INT id
    8            | TYPE_INT id '[' num ',' num ']'
    9            | TYPE_INT id '[' num ']'

   10 @2: /* empty */

   11 Function_Declaration: TYPE_FUNCTION id '(' ')' '{' @2 Instructions Return_Statement '}'

   12 Function_Invocation: PL_CALL id '(' ')'

   13 Return_Statement: PL_RETURN Arithmetic_Expression ';'

   14 Instructions: Instructions Instruction
   15             | /* empty */

   16 Instruction: Assignment ';'
   17            | WriteStdout ';'
   18            | Conditional
   19            | Cycle

   20 Assignment: id '=' Assignement_Value
   21           | Vectors '=' Assignement_Value

   22 Assignement_Value: Arithmetic_Expression
   23                  | Read_Stdin
   24                  | Function_Invocation

   25 @3: /* empty */

   26 @4: /* empty */

   27 Vectors: id @3 '[' Arithmetic_Expression @4 Second_Dimension Dimension_End

   28 Second_Dimension: ',' Arithmetic_Expression
   29                 | /* empty */

   30 Dimension_End: ']'

   31 Read_Stdin: PL_READ '(' ')'

   32 Arithmetic_Expression: Term
   33                      | Arithmetic_Expression '+' Term
   34                      | Arithmetic_Expression '-' Term

   35 Term: Factor
   36     | Term '*' Factor
   37     | Term '/' Factor
   38     | Term '%' Factor

   39 Factor: num
   40       | id
   41       | Vectors
   42       | '(' Arithmetic_Expression ')'

   43 Logical_Expressions: Logical_Expressions Logical_Expression
   44                    | /* empty */

   45 Logical_Expression: '!' Relational_Expression
   46                   | Relational_Expression
   47                   | Logical_Expression '|' '|' Relational_Expression
   48                   | Logical_Expression '&' '&' Relational_Expression

   49 Relational_Expression: Arithmetic_Expression
   50                      | Arithmetic_Expression '=' '=' Arithmetic_Expression
   51                      | Arithmetic_Expression '!' '=' Arithmetic_Expression
   52                      | Arithmetic_Expression '>' Arithmetic_Expression
   53                      | Arithmetic_Expression '>' '=' Arithmetic_Expression
   54                      | Arithmetic_Expression '<' Arithmetic_Expression
   55                      | Arithmetic_Expression '<' '=' Arithmetic_Expression
   56                      | '(' Logical_Expressions ')'

   57 @5: /* empty */

   58 Conditional: If_Starter PL_THEN '{' Instructions '}' @5 Else_Clause

   59 @6: /* empty */

   60 Conditional: If_Starter PL_THEN Instruction @6 Else_Clause

   61 @7: /* empty */

   62 If_Starter: @7 PL_IF '(' Logical_Expressions ')'

   63 Else_Clause: PL_ELSE '{' Instructions '}'
   64            | PL_ELSE Instruction
   65            | /* empty */

   66 @8: /* empty */

   67 Cycle: PL_DO @8 '{' Instructions '}' PL_WHILE '(' Logical_Expressions ')'

   68 @9: /* empty */

   69 Cycle: PL_DO @9 Instruction PL_WHILE '(' Logical_Expressions ')'

   70 WriteStdout: PL_PRINT id
   71            | PL_PRINT Vectors
   72            | PL_PRINT num
   73            | PL_PRINT string


Terminals, with rules where they appear

$end (0) 0
'!' (33) 45 51
'%' (37) 38
'&' (38) 48
'(' (40) 11 12 31 42 56 62 67 69
')' (41) 11 12 31 42 56 62 67 69
'*' (42) 36
'+' (43) 33
',' (44) 8 28
'-' (45) 34
'/' (47) 37
';' (59) 3 13 16 17
'<' (60) 54 55
'=' (61) 20 21 50 51 53 55
'>' (62) 52 53
'[' (91) 8 9 27
']' (93) 8 9 30
'{' (123) 11 58 63 67
'|' (124) 47
'}' (125) 11 58 63 67
error (256)
id (258) 7 8 9 11 12 20 27 40 70
num (259) 8 9 39 72
string (260) 73
TYPE_INT (261) 7 8 9
TYPE_FUNCTION (262) 11
PL_IF (263) 62
PL_THEN (264) 58 60
PL_ELSE (265) 63 64
PL_DO (266) 67 69
PL_WHILE (267) 67 69
PL_PRINT (268) 70 71 72 73
PL_READ (269) 31
PL_CALL (270) 12
PL_RETURN (271) 13


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
AlgebricScript (37)
    on left: 2, on right: 0
@1 (38)
    on left: 1, on right: 2
Declarations (39)
    on left: 3 4, on right: 2 3
Function_Declarations (40)
    on left: 5 6, on right: 2 5
Declaration (41)
    on left: 7 8 9, on right: 3
Function_Declaration (42)
    on left: 11, on right: 5
@2 (43)
    on left: 10, on right: 11
Function_Invocation (44)
    on left: 12, on right: 24
Return_Statement (45)
    on left: 13, on right: 11
Instructions (46)
    on left: 14 15, on right: 2 11 14 58 63 67
Instruction (47)
    on left: 16 17 18 19, on right: 14 60 64 69
Assignment (48)
    on left: 20 21, on right: 16
Assignement_Value (49)
    on left: 22 23 24, on right: 20 21
Vectors (50)
    on left: 27, on right: 21 41 71
@3 (51)
    on left: 25, on right: 27
@4 (52)
    on left: 26, on right: 27
Second_Dimension (53)
    on left: 28 29, on right: 27
Dimension_End (54)
    on left: 30, on right: 27
Read_Stdin (55)
    on left: 31, on right: 23
Arithmetic_Expression (56)
    on left: 32 33 34, on right: 13 22 27 28 33 34 42 49 50 51 52 53
    54 55
Term (57)
    on left: 35 36 37 38, on right: 32 33 34 36 37 38
Factor (58)
    on left: 39 40 41 42, on right: 35 36 37 38
Logical_Expressions (59)
    on left: 43 44, on right: 43 56 62 67 69
Logical_Expression (60)
    on left: 45 46 47 48, on right: 43 47 48
Relational_Expression (61)
    on left: 49 50 51 52 53 54 55 56, on right: 45 46 47 48
Conditional (62)
    on left: 58 60, on right: 18
@5 (63)
    on left: 57, on right: 58
@6 (64)
    on left: 59, on right: 60
If_Starter (65)
    on left: 62, on right: 58 60
@7 (66)
    on left: 61, on right: 62
Else_Clause (67)
    on left: 63 64 65, on right: 58 60
Cycle (68)
    on left: 67 69, on right: 19
@8 (69)
    on left: 66, on right: 67
@9 (70)
    on left: 68, on right: 69
WriteStdout (71)
    on left: 70 71 72 73, on right: 17


state 0

    0 $accept: . AlgebricScript $end

    $default  reduce using rule 4 (Declarations)

    AlgebricScript  go to state 1
    Declarations    go to state 2


state 1

    0 $accept: AlgebricScript . $end

    $end  shift, and go to state 3


state 2

    2 AlgebricScript: Declarations . Function_Declarations @1 Instructions
    3 Declarations: Declarations . Declaration ';'

    TYPE_INT  shift, and go to state 4

    $default  reduce using rule 6 (Function_Declarations)

    Function_Declarations  go to state 5
    Declaration            go to state 6


state 3

    0 $accept: AlgebricScript $end .

    $default  accept


state 4

    7 Declaration: TYPE_INT . id
    8            | TYPE_INT . id '[' num ',' num ']'
    9            | TYPE_INT . id '[' num ']'

    id  shift, and go to state 7


state 5

    2 AlgebricScript: Declarations Function_Declarations . @1 Instructions
    5 Function_Declarations: Function_Declarations . Function_Declaration

    TYPE_FUNCTION  shift, and go to state 8

    $default  reduce using rule 1 (@1)

    @1                    go to state 9
    Function_Declaration  go to state 10


state 6

    3 Declarations: Declarations Declaration . ';'

    ';'  shift, and go to state 11


state 7

    7 Declaration: TYPE_INT id .
    8            | TYPE_INT id . '[' num ',' num ']'
    9            | TYPE_INT id . '[' num ']'

    '['  shift, and go to state 12

    $default  reduce using rule 7 (Declaration)


state 8

   11 Function_Declaration: TYPE_FUNCTION . id '(' ')' '{' @2 Instructions Return_Statement '}'

    id  shift, and go to state 13


state 9

    2 AlgebricScript: Declarations Function_Declarations @1 . Instructions

    $default  reduce using rule 15 (Instructions)

    Instructions  go to state 14


state 10

    5 Function_Declarations: Function_Declarations Function_Declaration .

    $default  reduce using rule 5 (Function_Declarations)


state 11

    3 Declarations: Declarations Declaration ';' .

    $default  reduce using rule 3 (Declarations)


state 12

    8 Declaration: TYPE_INT id '[' . num ',' num ']'
    9            | TYPE_INT id '[' . num ']'

    num  shift, and go to state 15


state 13

   11 Function_Declaration: TYPE_FUNCTION id . '(' ')' '{' @2 Instructions Return_Statement '}'

    '('  shift, and go to state 16


state 14

    2 AlgebricScript: Declarations Function_Declarations @1 Instructions .
   14 Instructions: Instructions . Instruction

    id        shift, and go to state 17
    PL_DO     shift, and go to state 18
    PL_PRINT  shift, and go to state 19

    PL_IF     reduce using rule 61 (@7)
    $default  reduce using rule 2 (AlgebricScript)

    Instruction  go to state 20
    Assignment   go to state 21
    Vectors      go to state 22
    Conditional  go to state 23
    If_Starter   go to state 24
    @7           go to state 25
    Cycle        go to state 26
    WriteStdout  go to state 27


state 15

    8 Declaration: TYPE_INT id '[' num . ',' num ']'
    9            | TYPE_INT id '[' num . ']'

    ','  shift, and go to state 28
    ']'  shift, and go to state 29


state 16

   11 Function_Declaration: TYPE_FUNCTION id '(' . ')' '{' @2 Instructions Return_Statement '}'

    ')'  shift, and go to state 30


state 17

   20 Assignment: id . '=' Assignement_Value
   27 Vectors: id . @3 '[' Arithmetic_Expression @4 Second_Dimension Dimension_End

    '='  shift, and go to state 31

    $default  reduce using rule 25 (@3)

    @3  go to state 32


state 18

   67 Cycle: PL_DO . @8 '{' Instructions '}' PL_WHILE '(' Logical_Expressions ')'
   69      | PL_DO . @9 Instruction PL_WHILE '(' Logical_Expressions ')'

    '{'       reduce using rule 66 (@8)
    $default  reduce using rule 68 (@9)

    @8  go to state 33
    @9  go to state 34


state 19

   70 WriteStdout: PL_PRINT . id
   71            | PL_PRINT . Vectors
   72            | PL_PRINT . num
   73            | PL_PRINT . string

    id      shift, and go to state 35
    num     shift, and go to state 36
    string  shift, and go to state 37

    Vectors  go to state 38


state 20

   14 Instructions: Instructions Instruction .

    $default  reduce using rule 14 (Instructions)


state 21

   16 Instruction: Assignment . ';'

    ';'  shift, and go to state 39


state 22

   21 Assignment: Vectors . '=' Assignement_Value

    '='  shift, and go to state 40


state 23

   18 Instruction: Conditional .

    $default  reduce using rule 18 (Instruction)


state 24

   58 Conditional: If_Starter . PL_THEN '{' Instructions '}' @5 Else_Clause
   60            | If_Starter . PL_THEN Instruction @6 Else_Clause

    PL_THEN  shift, and go to state 41


state 25

   62 If_Starter: @7 . PL_IF '(' Logical_Expressions ')'

    PL_IF  shift, and go to state 42


state 26

   19 Instruction: Cycle .

    $default  reduce using rule 19 (Instruction)


state 27

   17 Instruction: WriteStdout . ';'

    ';'  shift, and go to state 43


state 28

    8 Declaration: TYPE_INT id '[' num ',' . num ']'

    num  shift, and go to state 44


state 29

    9 Declaration: TYPE_INT id '[' num ']' .

    $default  reduce using rule 9 (Declaration)


state 30

   11 Function_Declaration: TYPE_FUNCTION id '(' ')' . '{' @2 Instructions Return_Statement '}'

    '{'  shift, and go to state 45


state 31

   20 Assignment: id '=' . Assignement_Value

    id       shift, and go to state 46
    num      shift, and go to state 47
    PL_READ  shift, and go to state 48
    PL_CALL  shift, and go to state 49
    '('      shift, and go to state 50

    Function_Invocation    go to state 51
    Assignement_Value      go to state 52
    Vectors                go to state 53
    Read_Stdin             go to state 54
    Arithmetic_Expression  go to state 55
    Term                   go to state 56
    Factor                 go to state 57


state 32

   27 Vectors: id @3 . '[' Arithmetic_Expression @4 Second_Dimension Dimension_End

    '['  shift, and go to state 58


state 33

   67 Cycle: PL_DO @8 . '{' Instructions '}' PL_WHILE '(' Logical_Expressions ')'

    '{'  shift, and go to state 59


state 34

   69 Cycle: PL_DO @9 . Instruction PL_WHILE '(' Logical_Expressions ')'

    id        shift, and go to state 17
    PL_DO     shift, and go to state 18
    PL_PRINT  shift, and go to state 19

    $default  reduce using rule 61 (@7)

    Instruction  go to state 60
    Assignment   go to state 21
    Vectors      go to state 22
    Conditional  go to state 23
    If_Starter   go to state 24
    @7           go to state 25
    Cycle        go to state 26
    WriteStdout  go to state 27


state 35

   27 Vectors: id . @3 '[' Arithmetic_Expression @4 Second_Dimension Dimension_End
   70 WriteStdout: PL_PRINT id .

    ';'       reduce using rule 70 (WriteStdout)
    $default  reduce using rule 25 (@3)

    @3  go to state 32


state 36

   72 WriteStdout: PL_PRINT num .

    $default  reduce using rule 72 (WriteStdout)


state 37

   73 WriteStdout: PL_PRINT string .

    $default  reduce using rule 73 (WriteStdout)


state 38

   71 WriteStdout: PL_PRINT Vectors .

    $default  reduce using rule 71 (WriteStdout)


state 39

   16 Instruction: Assignment ';' .

    $default  reduce using rule 16 (Instruction)


state 40

   21 Assignment: Vectors '=' . Assignement_Value

    id       shift, and go to state 46
    num      shift, and go to state 47
    PL_READ  shift, and go to state 48
    PL_CALL  shift, and go to state 49
    '('      shift, and go to state 50

    Function_Invocation    go to state 51
    Assignement_Value      go to state 61
    Vectors                go to state 53
    Read_Stdin             go to state 54
    Arithmetic_Expression  go to state 55
    Term                   go to state 56
    Factor                 go to state 57


state 41

   58 Conditional: If_Starter PL_THEN . '{' Instructions '}' @5 Else_Clause
   60            | If_Starter PL_THEN . Instruction @6 Else_Clause

    id        shift, and go to state 17
    PL_DO     shift, and go to state 18
    PL_PRINT  shift, and go to state 19
    '{'       shift, and go to state 62

    $default  reduce using rule 61 (@7)

    Instruction  go to state 63
    Assignment   go to state 21
    Vectors      go to state 22
    Conditional  go to state 23
    If_Starter   go to state 24
    @7           go to state 25
    Cycle        go to state 26
    WriteStdout  go to state 27


state 42

   62 If_Starter: @7 PL_IF . '(' Logical_Expressions ')'

    '('  shift, and go to state 64


state 43

   17 Instruction: WriteStdout ';' .

    $default  reduce using rule 17 (Instruction)


state 44

    8 Declaration: TYPE_INT id '[' num ',' num . ']'

    ']'  shift, and go to state 65


state 45

   11 Function_Declaration: TYPE_FUNCTION id '(' ')' '{' . @2 Instructions Return_Statement '}'

    $default  reduce using rule 10 (@2)

    @2  go to state 66


state 46

   27 Vectors: id . @3 '[' Arithmetic_Expression @4 Second_Dimension Dimension_End
   40 Factor: id .

    '['       reduce using rule 25 (@3)
    $default  reduce using rule 40 (Factor)

    @3  go to state 32


state 47

   39 Factor: num .

    $default  reduce using rule 39 (Factor)


state 48

   31 Read_Stdin: PL_READ . '(' ')'

    '('  shift, and go to state 67


state 49

   12 Function_Invocation: PL_CALL . id '(' ')'

    id  shift, and go to state 68


state 50

   42 Factor: '(' . Arithmetic_Expression ')'

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors                go to state 53
    Arithmetic_Expression  go to state 69
    Term                   go to state 56
    Factor                 go to state 57


state 51

   24 Assignement_Value: Function_Invocation .

    $default  reduce using rule 24 (Assignement_Value)


state 52

   20 Assignment: id '=' Assignement_Value .

    $default  reduce using rule 20 (Assignment)


state 53

   41 Factor: Vectors .

    $default  reduce using rule 41 (Factor)


state 54

   23 Assignement_Value: Read_Stdin .

    $default  reduce using rule 23 (Assignement_Value)


state 55

   22 Assignement_Value: Arithmetic_Expression .
   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 22 (Assignement_Value)


state 56

   32 Arithmetic_Expression: Term .
   36 Term: Term . '*' Factor
   37     | Term . '/' Factor
   38     | Term . '%' Factor

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 32 (Arithmetic_Expression)


state 57

   35 Term: Factor .

    $default  reduce using rule 35 (Term)


state 58

   27 Vectors: id @3 '[' . Arithmetic_Expression @4 Second_Dimension Dimension_End

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors                go to state 53
    Arithmetic_Expression  go to state 75
    Term                   go to state 56
    Factor                 go to state 57


state 59

   67 Cycle: PL_DO @8 '{' . Instructions '}' PL_WHILE '(' Logical_Expressions ')'

    $default  reduce using rule 15 (Instructions)

    Instructions  go to state 76


state 60

   69 Cycle: PL_DO @9 Instruction . PL_WHILE '(' Logical_Expressions ')'

    PL_WHILE  shift, and go to state 77


state 61

   21 Assignment: Vectors '=' Assignement_Value .

    $default  reduce using rule 21 (Assignment)


state 62

   58 Conditional: If_Starter PL_THEN '{' . Instructions '}' @5 Else_Clause

    $default  reduce using rule 15 (Instructions)

    Instructions  go to state 78


state 63

   60 Conditional: If_Starter PL_THEN Instruction . @6 Else_Clause

    $default  reduce using rule 59 (@6)

    @6  go to state 79


state 64

   62 If_Starter: @7 PL_IF '(' . Logical_Expressions ')'

    $default  reduce using rule 44 (Logical_Expressions)

    Logical_Expressions  go to state 80


state 65

    8 Declaration: TYPE_INT id '[' num ',' num ']' .

    $default  reduce using rule 8 (Declaration)


state 66

   11 Function_Declaration: TYPE_FUNCTION id '(' ')' '{' @2 . Instructions Return_Statement '}'

    $default  reduce using rule 15 (Instructions)

    Instructions  go to state 81


state 67

   31 Read_Stdin: PL_READ '(' . ')'

    ')'  shift, and go to state 82


state 68

   12 Function_Invocation: PL_CALL id . '(' ')'

    '('  shift, and go to state 83


state 69

   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term
   42 Factor: '(' Arithmetic_Expression . ')'

    ')'  shift, and go to state 84
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71


state 70

   33 Arithmetic_Expression: Arithmetic_Expression '+' . Term

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors  go to state 53
    Term     go to state 85
    Factor   go to state 57


state 71

   34 Arithmetic_Expression: Arithmetic_Expression '-' . Term

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors  go to state 53
    Term     go to state 86
    Factor   go to state 57


state 72

   36 Term: Term '*' . Factor

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors  go to state 53
    Factor   go to state 87


state 73

   37 Term: Term '/' . Factor

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors  go to state 53
    Factor   go to state 88


state 74

   38 Term: Term '%' . Factor

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors  go to state 53
    Factor   go to state 89


state 75

   27 Vectors: id @3 '[' Arithmetic_Expression . @4 Second_Dimension Dimension_End
   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 26 (@4)

    @4  go to state 90


state 76

   14 Instructions: Instructions . Instruction
   67 Cycle: PL_DO @8 '{' Instructions . '}' PL_WHILE '(' Logical_Expressions ')'

    id        shift, and go to state 17
    PL_DO     shift, and go to state 18
    PL_PRINT  shift, and go to state 19
    '}'       shift, and go to state 91

    $default  reduce using rule 61 (@7)

    Instruction  go to state 20
    Assignment   go to state 21
    Vectors      go to state 22
    Conditional  go to state 23
    If_Starter   go to state 24
    @7           go to state 25
    Cycle        go to state 26
    WriteStdout  go to state 27


state 77

   69 Cycle: PL_DO @9 Instruction PL_WHILE . '(' Logical_Expressions ')'

    '('  shift, and go to state 92


state 78

   14 Instructions: Instructions . Instruction
   58 Conditional: If_Starter PL_THEN '{' Instructions . '}' @5 Else_Clause

    id        shift, and go to state 17
    PL_DO     shift, and go to state 18
    PL_PRINT  shift, and go to state 19
    '}'       shift, and go to state 93

    $default  reduce using rule 61 (@7)

    Instruction  go to state 20
    Assignment   go to state 21
    Vectors      go to state 22
    Conditional  go to state 23
    If_Starter   go to state 24
    @7           go to state 25
    Cycle        go to state 26
    WriteStdout  go to state 27


state 79

   60 Conditional: If_Starter PL_THEN Instruction @6 . Else_Clause

    PL_ELSE  shift, and go to state 94

    PL_ELSE   [reduce using rule 65 (Else_Clause)]
    $default  reduce using rule 65 (Else_Clause)

    Else_Clause  go to state 95


state 80

   43 Logical_Expressions: Logical_Expressions . Logical_Expression
   62 If_Starter: @7 PL_IF '(' Logical_Expressions . ')'

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 96
    ')'  shift, and go to state 97
    '!'  shift, and go to state 98

    Vectors                go to state 53
    Arithmetic_Expression  go to state 99
    Term                   go to state 56
    Factor                 go to state 57
    Logical_Expression     go to state 100
    Relational_Expression  go to state 101


state 81

   11 Function_Declaration: TYPE_FUNCTION id '(' ')' '{' @2 Instructions . Return_Statement '}'
   14 Instructions: Instructions . Instruction

    id         shift, and go to state 17
    PL_DO      shift, and go to state 18
    PL_PRINT   shift, and go to state 19
    PL_RETURN  shift, and go to state 102

    $default  reduce using rule 61 (@7)

    Return_Statement  go to state 103
    Instruction       go to state 20
    Assignment        go to state 21
    Vectors           go to state 22
    Conditional       go to state 23
    If_Starter        go to state 24
    @7                go to state 25
    Cycle             go to state 26
    WriteStdout       go to state 27


state 82

   31 Read_Stdin: PL_READ '(' ')' .

    $default  reduce using rule 31 (Read_Stdin)


state 83

   12 Function_Invocation: PL_CALL id '(' . ')'

    ')'  shift, and go to state 104


state 84

   42 Factor: '(' Arithmetic_Expression ')' .

    $default  reduce using rule 42 (Factor)


state 85

   33 Arithmetic_Expression: Arithmetic_Expression '+' Term .
   36 Term: Term . '*' Factor
   37     | Term . '/' Factor
   38     | Term . '%' Factor

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 33 (Arithmetic_Expression)


state 86

   34 Arithmetic_Expression: Arithmetic_Expression '-' Term .
   36 Term: Term . '*' Factor
   37     | Term . '/' Factor
   38     | Term . '%' Factor

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 34 (Arithmetic_Expression)


state 87

   36 Term: Term '*' Factor .

    $default  reduce using rule 36 (Term)


state 88

   37 Term: Term '/' Factor .

    $default  reduce using rule 37 (Term)


state 89

   38 Term: Term '%' Factor .

    $default  reduce using rule 38 (Term)


state 90

   27 Vectors: id @3 '[' Arithmetic_Expression @4 . Second_Dimension Dimension_End

    ','  shift, and go to state 105

    $default  reduce using rule 29 (Second_Dimension)

    Second_Dimension  go to state 106


state 91

   67 Cycle: PL_DO @8 '{' Instructions '}' . PL_WHILE '(' Logical_Expressions ')'

    PL_WHILE  shift, and go to state 107


state 92

   69 Cycle: PL_DO @9 Instruction PL_WHILE '(' . Logical_Expressions ')'

    $default  reduce using rule 44 (Logical_Expressions)

    Logical_Expressions  go to state 108


state 93

   58 Conditional: If_Starter PL_THEN '{' Instructions '}' . @5 Else_Clause

    $default  reduce using rule 57 (@5)

    @5  go to state 109


state 94

   63 Else_Clause: PL_ELSE . '{' Instructions '}'
   64            | PL_ELSE . Instruction

    id        shift, and go to state 17
    PL_DO     shift, and go to state 18
    PL_PRINT  shift, and go to state 19
    '{'       shift, and go to state 110

    $default  reduce using rule 61 (@7)

    Instruction  go to state 111
    Assignment   go to state 21
    Vectors      go to state 22
    Conditional  go to state 23
    If_Starter   go to state 24
    @7           go to state 25
    Cycle        go to state 26
    WriteStdout  go to state 27


state 95

   60 Conditional: If_Starter PL_THEN Instruction @6 Else_Clause .

    $default  reduce using rule 60 (Conditional)


state 96

   42 Factor: '(' . Arithmetic_Expression ')'
   56 Relational_Expression: '(' . Logical_Expressions ')'

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    id        [reduce using rule 44 (Logical_Expressions)]
    num       [reduce using rule 44 (Logical_Expressions)]
    '('       [reduce using rule 44 (Logical_Expressions)]
    $default  reduce using rule 44 (Logical_Expressions)

    Vectors                go to state 53
    Arithmetic_Expression  go to state 69
    Term                   go to state 56
    Factor                 go to state 57
    Logical_Expressions    go to state 112


state 97

   62 If_Starter: @7 PL_IF '(' Logical_Expressions ')' .

    $default  reduce using rule 62 (If_Starter)


state 98

   45 Logical_Expression: '!' . Relational_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 96

    Vectors                go to state 53
    Arithmetic_Expression  go to state 99
    Term                   go to state 56
    Factor                 go to state 57
    Relational_Expression  go to state 113


state 99

   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term
   49 Relational_Expression: Arithmetic_Expression .
   50                      | Arithmetic_Expression . '=' '=' Arithmetic_Expression
   51                      | Arithmetic_Expression . '!' '=' Arithmetic_Expression
   52                      | Arithmetic_Expression . '>' Arithmetic_Expression
   53                      | Arithmetic_Expression . '>' '=' Arithmetic_Expression
   54                      | Arithmetic_Expression . '<' Arithmetic_Expression
   55                      | Arithmetic_Expression . '<' '=' Arithmetic_Expression

    '='  shift, and go to state 114
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '!'  shift, and go to state 115
    '>'  shift, and go to state 116
    '<'  shift, and go to state 117

    '!'       [reduce using rule 49 (Relational_Expression)]
    $default  reduce using rule 49 (Relational_Expression)


state 100

   43 Logical_Expressions: Logical_Expressions Logical_Expression .
   47 Logical_Expression: Logical_Expression . '|' '|' Relational_Expression
   48                   | Logical_Expression . '&' '&' Relational_Expression

    '|'  shift, and go to state 118
    '&'  shift, and go to state 119

    $default  reduce using rule 43 (Logical_Expressions)


state 101

   46 Logical_Expression: Relational_Expression .

    $default  reduce using rule 46 (Logical_Expression)


state 102

   13 Return_Statement: PL_RETURN . Arithmetic_Expression ';'

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors                go to state 53
    Arithmetic_Expression  go to state 120
    Term                   go to state 56
    Factor                 go to state 57


state 103

   11 Function_Declaration: TYPE_FUNCTION id '(' ')' '{' @2 Instructions Return_Statement . '}'

    '}'  shift, and go to state 121


state 104

   12 Function_Invocation: PL_CALL id '(' ')' .

    $default  reduce using rule 12 (Function_Invocation)


state 105

   28 Second_Dimension: ',' . Arithmetic_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors                go to state 53
    Arithmetic_Expression  go to state 122
    Term                   go to state 56
    Factor                 go to state 57


state 106

   27 Vectors: id @3 '[' Arithmetic_Expression @4 Second_Dimension . Dimension_End

    ']'  shift, and go to state 123

    Dimension_End  go to state 124


state 107

   67 Cycle: PL_DO @8 '{' Instructions '}' PL_WHILE . '(' Logical_Expressions ')'

    '('  shift, and go to state 125


state 108

   43 Logical_Expressions: Logical_Expressions . Logical_Expression
   69 Cycle: PL_DO @9 Instruction PL_WHILE '(' Logical_Expressions . ')'

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 96
    ')'  shift, and go to state 126
    '!'  shift, and go to state 98

    Vectors                go to state 53
    Arithmetic_Expression  go to state 99
    Term                   go to state 56
    Factor                 go to state 57
    Logical_Expression     go to state 100
    Relational_Expression  go to state 101


state 109

   58 Conditional: If_Starter PL_THEN '{' Instructions '}' @5 . Else_Clause

    PL_ELSE  shift, and go to state 94

    PL_ELSE   [reduce using rule 65 (Else_Clause)]
    $default  reduce using rule 65 (Else_Clause)

    Else_Clause  go to state 127


state 110

   63 Else_Clause: PL_ELSE '{' . Instructions '}'

    $default  reduce using rule 15 (Instructions)

    Instructions  go to state 128


state 111

   64 Else_Clause: PL_ELSE Instruction .

    $default  reduce using rule 64 (Else_Clause)


state 112

   43 Logical_Expressions: Logical_Expressions . Logical_Expression
   56 Relational_Expression: '(' Logical_Expressions . ')'

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 96
    ')'  shift, and go to state 129
    '!'  shift, and go to state 98

    Vectors                go to state 53
    Arithmetic_Expression  go to state 99
    Term                   go to state 56
    Factor                 go to state 57
    Logical_Expression     go to state 100
    Relational_Expression  go to state 101


state 113

   45 Logical_Expression: '!' Relational_Expression .

    $default  reduce using rule 45 (Logical_Expression)


state 114

   50 Relational_Expression: Arithmetic_Expression '=' . '=' Arithmetic_Expression

    '='  shift, and go to state 130


state 115

   51 Relational_Expression: Arithmetic_Expression '!' . '=' Arithmetic_Expression

    '='  shift, and go to state 131


state 116

   52 Relational_Expression: Arithmetic_Expression '>' . Arithmetic_Expression
   53                      | Arithmetic_Expression '>' . '=' Arithmetic_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50
    '='  shift, and go to state 132

    Vectors                go to state 53
    Arithmetic_Expression  go to state 133
    Term                   go to state 56
    Factor                 go to state 57


state 117

   54 Relational_Expression: Arithmetic_Expression '<' . Arithmetic_Expression
   55                      | Arithmetic_Expression '<' . '=' Arithmetic_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50
    '='  shift, and go to state 134

    Vectors                go to state 53
    Arithmetic_Expression  go to state 135
    Term                   go to state 56
    Factor                 go to state 57


state 118

   47 Logical_Expression: Logical_Expression '|' . '|' Relational_Expression

    '|'  shift, and go to state 136


state 119

   48 Logical_Expression: Logical_Expression '&' . '&' Relational_Expression

    '&'  shift, and go to state 137


state 120

   13 Return_Statement: PL_RETURN Arithmetic_Expression . ';'
   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term

    ';'  shift, and go to state 138
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71


state 121

   11 Function_Declaration: TYPE_FUNCTION id '(' ')' '{' @2 Instructions Return_Statement '}' .

    $default  reduce using rule 11 (Function_Declaration)


state 122

   28 Second_Dimension: ',' Arithmetic_Expression .
   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 28 (Second_Dimension)


state 123

   30 Dimension_End: ']' .

    $default  reduce using rule 30 (Dimension_End)


state 124

   27 Vectors: id @3 '[' Arithmetic_Expression @4 Second_Dimension Dimension_End .

    $default  reduce using rule 27 (Vectors)


state 125

   67 Cycle: PL_DO @8 '{' Instructions '}' PL_WHILE '(' . Logical_Expressions ')'

    $default  reduce using rule 44 (Logical_Expressions)

    Logical_Expressions  go to state 139


state 126

   69 Cycle: PL_DO @9 Instruction PL_WHILE '(' Logical_Expressions ')' .

    $default  reduce using rule 69 (Cycle)


state 127

   58 Conditional: If_Starter PL_THEN '{' Instructions '}' @5 Else_Clause .

    $default  reduce using rule 58 (Conditional)


state 128

   14 Instructions: Instructions . Instruction
   63 Else_Clause: PL_ELSE '{' Instructions . '}'

    id        shift, and go to state 17
    PL_DO     shift, and go to state 18
    PL_PRINT  shift, and go to state 19
    '}'       shift, and go to state 140

    $default  reduce using rule 61 (@7)

    Instruction  go to state 20
    Assignment   go to state 21
    Vectors      go to state 22
    Conditional  go to state 23
    If_Starter   go to state 24
    @7           go to state 25
    Cycle        go to state 26
    WriteStdout  go to state 27


state 129

   56 Relational_Expression: '(' Logical_Expressions ')' .

    $default  reduce using rule 56 (Relational_Expression)


state 130

   50 Relational_Expression: Arithmetic_Expression '=' '=' . Arithmetic_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors                go to state 53
    Arithmetic_Expression  go to state 141
    Term                   go to state 56
    Factor                 go to state 57


state 131

   51 Relational_Expression: Arithmetic_Expression '!' '=' . Arithmetic_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors                go to state 53
    Arithmetic_Expression  go to state 142
    Term                   go to state 56
    Factor                 go to state 57


state 132

   53 Relational_Expression: Arithmetic_Expression '>' '=' . Arithmetic_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors                go to state 53
    Arithmetic_Expression  go to state 143
    Term                   go to state 56
    Factor                 go to state 57


state 133

   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term
   52 Relational_Expression: Arithmetic_Expression '>' Arithmetic_Expression .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 52 (Relational_Expression)


state 134

   55 Relational_Expression: Arithmetic_Expression '<' '=' . Arithmetic_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 50

    Vectors                go to state 53
    Arithmetic_Expression  go to state 144
    Term                   go to state 56
    Factor                 go to state 57


state 135

   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term
   54 Relational_Expression: Arithmetic_Expression '<' Arithmetic_Expression .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 54 (Relational_Expression)


state 136

   47 Logical_Expression: Logical_Expression '|' '|' . Relational_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 96

    Vectors                go to state 53
    Arithmetic_Expression  go to state 99
    Term                   go to state 56
    Factor                 go to state 57
    Relational_Expression  go to state 145


state 137

   48 Logical_Expression: Logical_Expression '&' '&' . Relational_Expression

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 96

    Vectors                go to state 53
    Arithmetic_Expression  go to state 99
    Term                   go to state 56
    Factor                 go to state 57
    Relational_Expression  go to state 146


state 138

   13 Return_Statement: PL_RETURN Arithmetic_Expression ';' .

    $default  reduce using rule 13 (Return_Statement)


state 139

   43 Logical_Expressions: Logical_Expressions . Logical_Expression
   67 Cycle: PL_DO @8 '{' Instructions '}' PL_WHILE '(' Logical_Expressions . ')'

    id   shift, and go to state 46
    num  shift, and go to state 47
    '('  shift, and go to state 96
    ')'  shift, and go to state 147
    '!'  shift, and go to state 98

    Vectors                go to state 53
    Arithmetic_Expression  go to state 99
    Term                   go to state 56
    Factor                 go to state 57
    Logical_Expression     go to state 100
    Relational_Expression  go to state 101


state 140

   63 Else_Clause: PL_ELSE '{' Instructions '}' .

    $default  reduce using rule 63 (Else_Clause)


state 141

   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term
   50 Relational_Expression: Arithmetic_Expression '=' '=' Arithmetic_Expression .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 50 (Relational_Expression)


state 142

   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term
   51 Relational_Expression: Arithmetic_Expression '!' '=' Arithmetic_Expression .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 51 (Relational_Expression)


state 143

   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term
   53 Relational_Expression: Arithmetic_Expression '>' '=' Arithmetic_Expression .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 53 (Relational_Expression)


state 144

   33 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   34                      | Arithmetic_Expression . '-' Term
   55 Relational_Expression: Arithmetic_Expression '<' '=' Arithmetic_Expression .

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 55 (Relational_Expression)


state 145

   47 Logical_Expression: Logical_Expression '|' '|' Relational_Expression .

    $default  reduce using rule 47 (Logical_Expression)


state 146

   48 Logical_Expression: Logical_Expression '&' '&' Relational_Expression .

    $default  reduce using rule 48 (Logical_Expression)


state 147

   67 Cycle: PL_DO @8 '{' Instructions '}' PL_WHILE '(' Logical_Expressions ')' .

    $default  reduce using rule 67 (Cycle)
