Terminals which are not used

   LOG_AND


Rules never reduced

   24 Relational_Expression: /* empty */

   25 Logical_Expression: /* empty */

   26 ReadStdin: /* empty */

   27 WriteStdout: /* empty */

   28 Conditional_Expression: /* empty */

   29 Cycle_Expression: /* empty */


State 2 conflicts: 3 shift/reduce, 4 reduce/reduce
State 7 conflicts: 3 shift/reduce, 4 reduce/reduce
State 10 conflicts: 3 shift/reduce, 5 reduce/reduce
State 13 conflicts: 3 shift/reduce, 5 reduce/reduce
State 14 conflicts: 3 shift/reduce, 5 reduce/reduce
State 15 conflicts: 3 shift/reduce, 5 reduce/reduce
State 16 conflicts: 3 shift/reduce, 5 reduce/reduce
State 17 conflicts: 3 shift/reduce, 5 reduce/reduce
State 18 conflicts: 3 shift/reduce, 5 reduce/reduce


Grammar

    0 $accept: AlgebricScript $end

    1 AlgebricScript: Declarations Expressions

    2 Declarations: /* empty */
    3             | Declarations Declaration

    4 Declaration: id '=' Arithmetic_Expression ';'
    5            | structured_id '[' Arithmetic_Expression ']' ';'
    6            | structured_id '[' Arithmetic_Expression ']' '[' Arithmetic_Expression ']' ';'

    7 Expressions: Arithmetic_Expression Expressions
    8            | Relational_Expression Expressions
    9            | Logical_Expression Expressions
   10            | ReadStdin Expressions
   11            | WriteStdout Expressions
   12            | Conditional_Expression Expressions
   13            | Cycle_Expression Expressions
   14            | /* empty */

   15 Arithmetic_Expression: Term
   16                      | Arithmetic_Expression '+' Term
   17                      | Arithmetic_Expression '-' Term

   18 Term: Factor
   19     | Term '*' Factor
   20     | Term '/' Factor

   21 Factor: num
   22       | id
   23       | '(' Expressions ')'

   24 Relational_Expression: /* empty */

   25 Logical_Expression: /* empty */

   26 ReadStdin: /* empty */

   27 WriteStdout: /* empty */

   28 Conditional_Expression: /* empty */

   29 Cycle_Expression: /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23
')' (41) 23
'*' (42) 19
'+' (43) 16
'-' (45) 17
'/' (47) 20
';' (59) 4 5 6
'=' (61) 4
'[' (91) 5 6
']' (93) 5 6
error (256)
num (258) 21
id (259) 4 22
structured_id (260) 5 6
LOG_AND (261)


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
AlgebricScript (18)
    on left: 1, on right: 0
Declarations (19)
    on left: 2 3, on right: 1 3
Declaration (20)
    on left: 4 5 6, on right: 3
Expressions (21)
    on left: 7 8 9 10 11 12 13 14, on right: 1 7 8 9 10 11 12 13 23
Arithmetic_Expression (22)
    on left: 15 16 17, on right: 4 5 6 7 16 17
Term (23)
    on left: 18 19 20, on right: 15 16 17 19 20
Factor (24)
    on left: 21 22 23, on right: 18 19 20
Relational_Expression (25)
    on left: 24, on right: 8
Logical_Expression (26)
    on left: 25, on right: 9
ReadStdin (27)
    on left: 26, on right: 10
WriteStdout (28)
    on left: 27, on right: 11
Conditional_Expression (29)
    on left: 28, on right: 12
Cycle_Expression (30)
    on left: 29, on right: 13


state 0

    0 $accept: . AlgebricScript $end

    $default  reduce using rule 2 (Declarations)

    AlgebricScript  go to state 1
    Declarations    go to state 2


state 1

    0 $accept: AlgebricScript . $end

    $end  shift, and go to state 3


state 2

    1 AlgebricScript: Declarations . Expressions
    3 Declarations: Declarations . Declaration

    num            shift, and go to state 4
    id             shift, and go to state 5
    structured_id  shift, and go to state 6
    '('            shift, and go to state 7

    $end      reduce using rule 14 (Expressions)
    $end      [reduce using rule 24 (Relational_Expression)]
    $end      [reduce using rule 25 (Logical_Expression)]
    $end      [reduce using rule 26 (ReadStdin)]
    $end      [reduce using rule 27 (WriteStdout)]
    $end      [reduce using rule 28 (Conditional_Expression)]
    $end      [reduce using rule 29 (Cycle_Expression)]
    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Declaration             go to state 8
    Expressions             go to state 9
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 3

    0 $accept: AlgebricScript $end .

    $default  accept


state 4

   21 Factor: num .

    $default  reduce using rule 21 (Factor)


state 5

    4 Declaration: id . '=' Arithmetic_Expression ';'
   22 Factor: id .

    '='  shift, and go to state 19

    $default  reduce using rule 22 (Factor)


state 6

    5 Declaration: structured_id . '[' Arithmetic_Expression ']' ';'
    6            | structured_id . '[' Arithmetic_Expression ']' '[' Arithmetic_Expression ']' ';'

    '['  shift, and go to state 20


state 7

   23 Factor: '(' . Expressions ')'

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    ')'       reduce using rule 14 (Expressions)
    ')'       [reduce using rule 24 (Relational_Expression)]
    ')'       [reduce using rule 25 (Logical_Expression)]
    ')'       [reduce using rule 26 (ReadStdin)]
    ')'       [reduce using rule 27 (WriteStdout)]
    ')'       [reduce using rule 28 (Conditional_Expression)]
    ')'       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Expressions             go to state 22
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 8

    3 Declarations: Declarations Declaration .

    $default  reduce using rule 3 (Declarations)


state 9

    1 AlgebricScript: Declarations Expressions .

    $default  reduce using rule 1 (AlgebricScript)


state 10

    7 Expressions: Arithmetic_Expression . Expressions
   16 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   17                      | Arithmetic_Expression . '-' Term

    num  shift, and go to state 4
    id   shift, and go to state 21
    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    '('  shift, and go to state 7

    $end      reduce using rule 14 (Expressions)
    $end      [reduce using rule 24 (Relational_Expression)]
    $end      [reduce using rule 25 (Logical_Expression)]
    $end      [reduce using rule 26 (ReadStdin)]
    $end      [reduce using rule 27 (WriteStdout)]
    $end      [reduce using rule 28 (Conditional_Expression)]
    $end      [reduce using rule 29 (Cycle_Expression)]
    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    ')'       reduce using rule 14 (Expressions)
    ')'       [reduce using rule 24 (Relational_Expression)]
    ')'       [reduce using rule 25 (Logical_Expression)]
    ')'       [reduce using rule 26 (ReadStdin)]
    ')'       [reduce using rule 27 (WriteStdout)]
    ')'       [reduce using rule 28 (Conditional_Expression)]
    ')'       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Expressions             go to state 25
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 11

   15 Arithmetic_Expression: Term .
   19 Term: Term . '*' Factor
   20     | Term . '/' Factor

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 15 (Arithmetic_Expression)


state 12

   18 Term: Factor .

    $default  reduce using rule 18 (Term)


state 13

    8 Expressions: Relational_Expression . Expressions

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    $end      reduce using rule 14 (Expressions)
    $end      [reduce using rule 24 (Relational_Expression)]
    $end      [reduce using rule 25 (Logical_Expression)]
    $end      [reduce using rule 26 (ReadStdin)]
    $end      [reduce using rule 27 (WriteStdout)]
    $end      [reduce using rule 28 (Conditional_Expression)]
    $end      [reduce using rule 29 (Cycle_Expression)]
    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    ')'       reduce using rule 14 (Expressions)
    ')'       [reduce using rule 24 (Relational_Expression)]
    ')'       [reduce using rule 25 (Logical_Expression)]
    ')'       [reduce using rule 26 (ReadStdin)]
    ')'       [reduce using rule 27 (WriteStdout)]
    ')'       [reduce using rule 28 (Conditional_Expression)]
    ')'       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Expressions             go to state 28
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 14

    9 Expressions: Logical_Expression . Expressions

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    $end      reduce using rule 14 (Expressions)
    $end      [reduce using rule 24 (Relational_Expression)]
    $end      [reduce using rule 25 (Logical_Expression)]
    $end      [reduce using rule 26 (ReadStdin)]
    $end      [reduce using rule 27 (WriteStdout)]
    $end      [reduce using rule 28 (Conditional_Expression)]
    $end      [reduce using rule 29 (Cycle_Expression)]
    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    ')'       reduce using rule 14 (Expressions)
    ')'       [reduce using rule 24 (Relational_Expression)]
    ')'       [reduce using rule 25 (Logical_Expression)]
    ')'       [reduce using rule 26 (ReadStdin)]
    ')'       [reduce using rule 27 (WriteStdout)]
    ')'       [reduce using rule 28 (Conditional_Expression)]
    ')'       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Expressions             go to state 29
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 15

   10 Expressions: ReadStdin . Expressions

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    $end      reduce using rule 14 (Expressions)
    $end      [reduce using rule 24 (Relational_Expression)]
    $end      [reduce using rule 25 (Logical_Expression)]
    $end      [reduce using rule 26 (ReadStdin)]
    $end      [reduce using rule 27 (WriteStdout)]
    $end      [reduce using rule 28 (Conditional_Expression)]
    $end      [reduce using rule 29 (Cycle_Expression)]
    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    ')'       reduce using rule 14 (Expressions)
    ')'       [reduce using rule 24 (Relational_Expression)]
    ')'       [reduce using rule 25 (Logical_Expression)]
    ')'       [reduce using rule 26 (ReadStdin)]
    ')'       [reduce using rule 27 (WriteStdout)]
    ')'       [reduce using rule 28 (Conditional_Expression)]
    ')'       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Expressions             go to state 30
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 16

   11 Expressions: WriteStdout . Expressions

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    $end      reduce using rule 14 (Expressions)
    $end      [reduce using rule 24 (Relational_Expression)]
    $end      [reduce using rule 25 (Logical_Expression)]
    $end      [reduce using rule 26 (ReadStdin)]
    $end      [reduce using rule 27 (WriteStdout)]
    $end      [reduce using rule 28 (Conditional_Expression)]
    $end      [reduce using rule 29 (Cycle_Expression)]
    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    ')'       reduce using rule 14 (Expressions)
    ')'       [reduce using rule 24 (Relational_Expression)]
    ')'       [reduce using rule 25 (Logical_Expression)]
    ')'       [reduce using rule 26 (ReadStdin)]
    ')'       [reduce using rule 27 (WriteStdout)]
    ')'       [reduce using rule 28 (Conditional_Expression)]
    ')'       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Expressions             go to state 31
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 17

   12 Expressions: Conditional_Expression . Expressions

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    $end      reduce using rule 14 (Expressions)
    $end      [reduce using rule 24 (Relational_Expression)]
    $end      [reduce using rule 25 (Logical_Expression)]
    $end      [reduce using rule 26 (ReadStdin)]
    $end      [reduce using rule 27 (WriteStdout)]
    $end      [reduce using rule 28 (Conditional_Expression)]
    $end      [reduce using rule 29 (Cycle_Expression)]
    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    ')'       reduce using rule 14 (Expressions)
    ')'       [reduce using rule 24 (Relational_Expression)]
    ')'       [reduce using rule 25 (Logical_Expression)]
    ')'       [reduce using rule 26 (ReadStdin)]
    ')'       [reduce using rule 27 (WriteStdout)]
    ')'       [reduce using rule 28 (Conditional_Expression)]
    ')'       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Expressions             go to state 32
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 18

   13 Expressions: Cycle_Expression . Expressions

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    $end      reduce using rule 14 (Expressions)
    $end      [reduce using rule 24 (Relational_Expression)]
    $end      [reduce using rule 25 (Logical_Expression)]
    $end      [reduce using rule 26 (ReadStdin)]
    $end      [reduce using rule 27 (WriteStdout)]
    $end      [reduce using rule 28 (Conditional_Expression)]
    $end      [reduce using rule 29 (Cycle_Expression)]
    num       [reduce using rule 24 (Relational_Expression)]
    num       [reduce using rule 25 (Logical_Expression)]
    num       [reduce using rule 26 (ReadStdin)]
    num       [reduce using rule 27 (WriteStdout)]
    num       [reduce using rule 28 (Conditional_Expression)]
    num       [reduce using rule 29 (Cycle_Expression)]
    id        [reduce using rule 24 (Relational_Expression)]
    id        [reduce using rule 25 (Logical_Expression)]
    id        [reduce using rule 26 (ReadStdin)]
    id        [reduce using rule 27 (WriteStdout)]
    id        [reduce using rule 28 (Conditional_Expression)]
    id        [reduce using rule 29 (Cycle_Expression)]
    '('       [reduce using rule 24 (Relational_Expression)]
    '('       [reduce using rule 25 (Logical_Expression)]
    '('       [reduce using rule 26 (ReadStdin)]
    '('       [reduce using rule 27 (WriteStdout)]
    '('       [reduce using rule 28 (Conditional_Expression)]
    '('       [reduce using rule 29 (Cycle_Expression)]
    ')'       reduce using rule 14 (Expressions)
    ')'       [reduce using rule 24 (Relational_Expression)]
    ')'       [reduce using rule 25 (Logical_Expression)]
    ')'       [reduce using rule 26 (ReadStdin)]
    ')'       [reduce using rule 27 (WriteStdout)]
    ')'       [reduce using rule 28 (Conditional_Expression)]
    ')'       [reduce using rule 29 (Cycle_Expression)]
    $default  reduce using rule 14 (Expressions)

    Expressions             go to state 33
    Arithmetic_Expression   go to state 10
    Term                    go to state 11
    Factor                  go to state 12
    Relational_Expression   go to state 13
    Logical_Expression      go to state 14
    ReadStdin               go to state 15
    WriteStdout             go to state 16
    Conditional_Expression  go to state 17
    Cycle_Expression        go to state 18


state 19

    4 Declaration: id '=' . Arithmetic_Expression ';'

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    Arithmetic_Expression  go to state 34
    Term                   go to state 11
    Factor                 go to state 12


state 20

    5 Declaration: structured_id '[' . Arithmetic_Expression ']' ';'
    6            | structured_id '[' . Arithmetic_Expression ']' '[' Arithmetic_Expression ']' ';'

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    Arithmetic_Expression  go to state 35
    Term                   go to state 11
    Factor                 go to state 12


state 21

   22 Factor: id .

    $default  reduce using rule 22 (Factor)


state 22

   23 Factor: '(' Expressions . ')'

    ')'  shift, and go to state 36


state 23

   16 Arithmetic_Expression: Arithmetic_Expression '+' . Term

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    Term    go to state 37
    Factor  go to state 12


state 24

   17 Arithmetic_Expression: Arithmetic_Expression '-' . Term

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    Term    go to state 38
    Factor  go to state 12


state 25

    7 Expressions: Arithmetic_Expression Expressions .

    $default  reduce using rule 7 (Expressions)


state 26

   19 Term: Term '*' . Factor

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    Factor  go to state 39


state 27

   20 Term: Term '/' . Factor

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    Factor  go to state 40


state 28

    8 Expressions: Relational_Expression Expressions .

    $default  reduce using rule 8 (Expressions)


state 29

    9 Expressions: Logical_Expression Expressions .

    $default  reduce using rule 9 (Expressions)


state 30

   10 Expressions: ReadStdin Expressions .

    $default  reduce using rule 10 (Expressions)


state 31

   11 Expressions: WriteStdout Expressions .

    $default  reduce using rule 11 (Expressions)


state 32

   12 Expressions: Conditional_Expression Expressions .

    $default  reduce using rule 12 (Expressions)


state 33

   13 Expressions: Cycle_Expression Expressions .

    $default  reduce using rule 13 (Expressions)


state 34

    4 Declaration: id '=' Arithmetic_Expression . ';'
   16 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   17                      | Arithmetic_Expression . '-' Term

    ';'  shift, and go to state 41
    '+'  shift, and go to state 23
    '-'  shift, and go to state 24


state 35

    5 Declaration: structured_id '[' Arithmetic_Expression . ']' ';'
    6            | structured_id '[' Arithmetic_Expression . ']' '[' Arithmetic_Expression ']' ';'
   16 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   17                      | Arithmetic_Expression . '-' Term

    ']'  shift, and go to state 42
    '+'  shift, and go to state 23
    '-'  shift, and go to state 24


state 36

   23 Factor: '(' Expressions ')' .

    $default  reduce using rule 23 (Factor)


state 37

   16 Arithmetic_Expression: Arithmetic_Expression '+' Term .
   19 Term: Term . '*' Factor
   20     | Term . '/' Factor

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 16 (Arithmetic_Expression)


state 38

   17 Arithmetic_Expression: Arithmetic_Expression '-' Term .
   19 Term: Term . '*' Factor
   20     | Term . '/' Factor

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 17 (Arithmetic_Expression)


state 39

   19 Term: Term '*' Factor .

    $default  reduce using rule 19 (Term)


state 40

   20 Term: Term '/' Factor .

    $default  reduce using rule 20 (Term)


state 41

    4 Declaration: id '=' Arithmetic_Expression ';' .

    $default  reduce using rule 4 (Declaration)


state 42

    5 Declaration: structured_id '[' Arithmetic_Expression ']' . ';'
    6            | structured_id '[' Arithmetic_Expression ']' . '[' Arithmetic_Expression ']' ';'

    ';'  shift, and go to state 43
    '['  shift, and go to state 44


state 43

    5 Declaration: structured_id '[' Arithmetic_Expression ']' ';' .

    $default  reduce using rule 5 (Declaration)


state 44

    6 Declaration: structured_id '[' Arithmetic_Expression ']' '[' . Arithmetic_Expression ']' ';'

    num  shift, and go to state 4
    id   shift, and go to state 21
    '('  shift, and go to state 7

    Arithmetic_Expression  go to state 45
    Term                   go to state 11
    Factor                 go to state 12


state 45

    6 Declaration: structured_id '[' Arithmetic_Expression ']' '[' Arithmetic_Expression . ']' ';'
   16 Arithmetic_Expression: Arithmetic_Expression . '+' Term
   17                      | Arithmetic_Expression . '-' Term

    ']'  shift, and go to state 46
    '+'  shift, and go to state 23
    '-'  shift, and go to state 24


state 46

    6 Declaration: structured_id '[' Arithmetic_Expression ']' '[' Arithmetic_Expression ']' . ';'

    ';'  shift, and go to state 47


state 47

    6 Declaration: structured_id '[' Arithmetic_Expression ']' '[' Arithmetic_Expression ']' ';' .

    $default  reduce using rule 6 (Declaration)
