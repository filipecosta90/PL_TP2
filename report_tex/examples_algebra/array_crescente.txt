// Universidade do Minho, Dpto Informatica                                      
// UC Processamento de Linguagens.                                              
// Maio 2016, Filipe Oliveira                                                   
//                                                                              
// Trabalho pratico 2                                                           
// Exemplo 4.                                                                   
// ler e armazenar os elementos de um vector de comprimento N
// imprimir os valores por ordem crescente apos fazer a ordenacao do array
// por trocas directas

int qtos_numeros;
int auxiliar[25];
int i;
int actual;
int minimo;
int localizacao_minimo;
int aux_troca;
int pivot;

////////////
// Inicializacao
////////////
i = 0;
print "quantos numeros a ler?: ";
qtos_numeros = read();
do {
  print " insira numero ";
  print i;
  print " de ";
  print qtos_numeros;
  print ": ";
  actual = read();
  auxiliar[i] = actual;
  i = i + 1;
} while ( i < qtos_numeros )

i = 0;

////////////
// Ordenacao
////////////

do {
  minimo = auxiliar[i];
  pivot = i;
  localizacao_minimo = i;
  do {
    actual = auxiliar[pivot];
    if ( actual < minimo ) then {
      minimo = actual;
      localizacao_minimo = pivot;
    }
    pivot = pivot +1;
  } while ( pivot < qtos_numeros )

  if ( localizacao_minimo != i ) then {
    aux_troca = auxiliar[localizacao_minimo];
    auxiliar[localizacao_minimo] = auxiliar[i];
    auxiliar[i] = aux_troca;
  }

  i = i +1;
} while ( i < qtos_numeros )


////////////
// Impressao
////////////

i = 0;
print " #LISTA ORDENADA ";
do {
  print auxiliar[i];
  print " ";
  i = i + 1;
} while ( i < qtos_numeros )

